npx cypress run --headed --spec "cypress\e2e\16_xpath" 


my cypress repositories for clone  :
https://github.com/haricypress/cypress_pro/ 
https://github.com/haricypress/cypress_practice/ 

================================================================================
1)
note : for "n" no.of cypress projects, install cypress "n" no.of times

first time install cypress,

1) create empty folder for cypress project
2) open cypress project folder in CMD prompt, follow below commands
    
    project address in local PC   :   D:\cypress_pro\cypress
    location in  CMD  promt        :  D:\cypress_pro\cypress>

3) CMD prompt commands :
command 1 : npm init  ( "package.json"  file will create )
command 2 : npm install cypress  

optional  : to remove or add pluggins based on "package.json" file
command   :  npm install 
"package.json"  file is showing all installed packages

=========================================================================================
2)
if any problem occured in cypress installation,
clear all previously installed cypress, then install latest cypress
run below 3 commands,
in CMD prompt open project folder,
command 1 (to clear all previously installed cypress)  :  npx cypress cache clear
command 2  (to install latest cypress version ) :  npx cypress install

optional : 
command 3 (to re-initiate cypress)      :     npm init

===========================================================================================
3)
cypress-xpath  (external pluggin)   :
command to install   :  npm install -D cypress-xpath

add      require('cypress-xpath');      statement in       "project_folder\cypress\support\e2e.js"     file

===========================================================================================
4)
to run cypress test cases in "test runner"  ( in front-end )               :  npx cypress open 
to run all cypress test cases in "run mode"  ( in background )             :  npx cypress run 

to run specific single script in background "run mode"               :
npx cypress run --spec 'cypress\e2e\16_CSSBasics\CSS_basics.cy.js'

to run specific single script in front-end "run mode"  , like "test runner"   :
npx cypress run --headed --spec 'cypress\e2e\16_CSSBasics\CSS_basics.cy.js'

===========================================================================================
5)
to run specific multiple scripts in "run mode" ( in background ) :
syntax 1 : npx cypress run --spec 'script1 relative path','script2 relative path','script3 relative path'
npx cypress run --spec 'cypress\e2e\15_16_page_object_models\addJobTitle.cy.js', 'cypress\e2e\15_16_page_object_models\emplymentStatus.cy.js'

syntax 2 : npx cypress run --spec 'script1 relative path, script2 relative path, script3 relative path'
npx cypress run --spec 'cypress\e2e\15_16_page_object_models\addJobTitle.cy.js, cypress\e2e\15_16_page_object_models\emplymentStatus.cy.js'   


to run all test script which are under a folder :

syntax 3 : npx cypress run --headed --spec "path upto required folder"
npx cypress run --headed --spec "cypress\e2e\16_xpath"
============================================================================================
6)
to run specific multiple scripts in "run mode" ( in front-end, like test runner ) :

syntax 1 : npx cypress run --headed --spec 'script1 relative path','script2 relative path','script3 relative path'
syntax 2 : npx cypress run --headed --spec 'script1 relative path, script2 relative path, script3 relative path'

example : npx cypress run --headed --spec 'cypress\e2e\15_16_page_object_models\addJobTitle.cy.js', 'cypress\e2e\15_16_page_object_models\emplymentStatus.cy.js'

example : npx cypress run --headed --spec 'cypress\e2e\15_16_page_object_models\addJobTitle.cy.js, cypress\e2e\15_16_page_object_models\emplymentStatus.cy.js'   


============================================================================================
7)
to run all scripts in a folder (can run even outside of "e2e" folder also, if path is correct) :

syntax :  npx cypress run --headed --spec cypress/e2e/sub_folder_name/*.cy.js

example : npx cypress run --headed --spec cypress/e2e/16_xpath/*.cy.js

 here,
        cypress, e2e, 16_xpath are folder names


============================================================================================
8)
to stop running scripts:
press    ctrl+c   in CMD promt

============================================================================================
9)
git error   :   failed to push some refs to remote
solution :  online git reposiroty replacing by local project (push command) 
           
run below  command in "CMD" at cypress project folder
            
			project address in local PC   :   D:\cypress_pro\cypress
            in  CMD  promt location         :  D:\cypress_pro\cypress>
            
			CMD prompt    :     git push -f origin main
            
to replace local project by online git reposiroty (pull command ) 
CMD prompt   :     git pull -f origin main

==========================================================================================
10)
allure reports :
*********
to install allure reports (run this command in CMD prompt at project folder) :  npm i -D @shelex/cypress-allure-plugin

in cypress config file,

add below line:
*********
const allureWriter = require('@shelex/cypress-allure-plugin/writer');

module.exports = defineConfig({
    e2e: {
        setupNodeEvents(on, config) {

add below 2 lines :
***********

            allureWriter(on, config);
            return config;
        }
    }
});

add below statement anywhere in "cypress/support/e2e.js" file :
***************************************
import '@shelex/cypress-allure-plugin';
run below commands in CMD under project folder :

run below commands in CMD :
to enable Allure reports : npx cypress run --env allure=true
to serve report : allure serve
to generate new report : allure generate
to open generated report : allure open

==========================================================================================
11)
command line to push first time from local pc to github repository  :

echo "# cypress_practice" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/haricypress/cypress_practice.git
git push -u origin main

here,
haricypress                  -   github account name
cypress_practice     -   repository name

==========================================================================================
12)
if cypress not work on any browser, follow below :
CMD command  : npx cypress open
in browser,   Goto File -> View App Data
Delete everything in here  ( ctrl +A,  press delete button)
Close cypress, open again

Note : coding / scripts never effect

==========================================================================================
13)
to pass data within "test suite"  from one "test case" to another "test case" use global variable ( i.e., var ).

==========================================================================================
14)
on "test runner" to display files on specific "extensions" : 

"specPattern"  is key

goto  "cypress.config.js" and add statement like below, if multiple statemenmets used, last statement affected.

mention extensions which you want execute in "test runner".

e2e: {
     
    // "specPattern":"**/*.cy.js",               // to display only "cy.js" files
    // "specPattern":"**/*.feature",             // to display only ".feature" files
           "specPattern": "**/*.{cy.js,feature}",    // to display only "cy.js" and ".feature" files
   // "specPattern":"**/*.{cy.{js,jxs},feature}",  // to display "cy.js", "cy.jxs", ".feature" files
	

example, to show "cy.js" and ".feature" files only in "test runner", add like below

e2e: {
           "specPattern": "**/*.{cy.js,feature}",
		   
==========================================================================================
15)
command to use another config file in test runner :
npx cypress open --config-file 'cypress.config1.js'

here, "cypress.config1.js" is another cypress config file, not default config file
==========================================================================================
16)

git clone https://github.com/haricypress/cypress_pro.git


CMD command to verify remote : 
git remote -v

output:
origin  https://github.com/haricypress/cypress_pro.git (fetch)
origin  https://github.com/haricypress/cypress_pro.git (push)

==========================================================================================
17)

to add existing local repository to cloude github,

run below commands in CMD ( at project folder localtion) :

1) git init
2) git remote add origin https://github.com/haricypress/cypress_pro.git


if repository in "master" then  to change from "master" to "main" ( CMD commands)  :
.



case 1 : 
======

CMD commands : 

1) git branch --move master main
2) git push origin main  ( pushing / uploading  normally)
							or
	    git push -f origin main  ( pushing / uploading  forcely)


case 2 : 
======
sometimes first "pull"mandatory, next "push" allowed.
so, backup scripts / support file / important files, then run below commands,

CMD commands : 

1) git branch --move master main     ( if repository already moved to "main" then it is optional)
2) git push origin main  /  git push -f origin main  ( run any one command)
3) git pull origin main (next run 2nd command)


case 3 :
======

have any problem to move "master" to "main"

1) delete git hidden  folder for your cypress project
2) git init
3) git branch --move master main


==========================================================================================
18)

CMD command to Verify remote :
git remote -v

example output:
origin  https://github.com/haricypress/cypress_pro.git (fetch)
origin  https://github.com/haricypress/cypress_pro.git (push)

==========================================================================================
19)


